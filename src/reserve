import './App.css';
import React from 'react';
import { useEffect, useState } from 'react';
const axios = require('axios').default;

function App() {
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [guestStatus, setGuestStatus] = useState('');
  const [guestList, setGuestList] = useState([]);
  const [guestID, setGuestID] = useState('0'); // or is this stupid now, how can i add the id to the guest otherwise

  const guest = {
    id: 1,
    firstName: '',
    lastName: '',
    guestStatus: '',
  };

  function emptyFields() {
    return '';
  }

  function handleFirstName(event) {
    setFirstName(event.target.value);
  }

  function handleLastName(event) {
    setLastName(event.target.value);
  }

  // function handleGuestID(event) {
  // setGuestID(event.target.value);}

  // calls the backend ('localhost') to create a new guest using the first- and last name that have just been entered
  // after that, sets the state back to empty fields to signal the user that they can enter new data
  function handleSubmit(event) {
    //const lastID = guestList.slice(-1)[0].guestID;
    //const nextID = lastID + 1;
    // setGuestID = nextID;

    const newGuest = {
      id: { guestID },
      firstName: { firstName },
      lastName: { lastName },
      attending: { guestStatus },
    };

    const newGuestList = [...guestList, newGuest];
    setGuestList(newGuestList);

    event.preventDefault();

    axios
      .post('http://localhost:5000/', {
        firstName: { firstName },
        lastName: { lastName },
      })
      .then(() => emptyFields())
      .catch((errorResponse) => console.log(errorResponse));
  }

  useEffect(() => {
    // axios goes to localhost 5000 and gets what is in there and setState puts that data into guests array

    const getGuestList = async () => {
      try {
        const response = await axios.get('/user?ID=12345');
        const data = response;
        setGuestList(data);
      } catch (error) {
        console.error(error);
      }

      getGuestList();
    };
  }, []);

  console.log(guestList);

  // axios sends changed status of attending to localhost 5000, id targeted at the end so that it knows which object to update
  function handleAttending(event) {
    setGuestStatus(event.currentTarget.checked);

    axios
      .patch(`http://localhost:5000/${guestID}`, {
        attending: checked,
      })
      .then(() => emptyFields());
  }

  // function to show the inhalt of a guest object in a table row
  function getTableRow() {
    const guest = { guestID, firstName, lastName, guestStatus };

    return (
      <tr key={guestID}>
        <td>{firstName}</td>
        <td>{lastName}</td>
        <td>
          <input
            type="checkbox"
            id={guestID}
            checked={guestStatus}
            onChange={handleAttending}
          />
        </td>
        <td>
          <input
            type="button"
            id={guestID}
            // onClick={handleClick}
            value="Remove"
          />
        </td>
      </tr>
    );
  }

  // // axios tells localhost 5000 to delete id-targeted guest
  // // when done, read the updated list of guests from the server
  function handleClick(event) {
    const { id } = event.target;

    axios.delete(`http://localhost:5000/${id}`).then(() => emptyFields());
  }

  return (
    <div>
      <h1>Guest List Manager</h1>
      <div>
        <p>First Name</p>
        <input type="text" value={firstName} onChange={handleFirstName} />
        <p>Last Name</p>
        <input type="text" value={lastName} onChange={handleLastName} />
        <br />
        <input type="submit" value="Add guest" onClick={handleSubmit} />
        <br />
        <h1>Guest List</h1>
        <table>
          <thead>
            <tr>
              <th>First name</th>
              <th>Last name</th>
              <th>Attending</th>
              <th>Remove guest</th>
            </tr>
          </thead>
          <tbody>{guestList.map(getTableRow)}</tbody>
        </table>
      </div>
    </div>
  );
}

export default App;
